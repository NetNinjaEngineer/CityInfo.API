// <auto-generated />
using CityInfo.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240124080838_AddValidationRulesMigration")]
    partial class AddValidationRulesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CityInfo.API.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "USA",
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Name = "New York",
                            Population = 8398748
                        },
                        new
                        {
                            Id = 2,
                            Country = "UK",
                            Latitude = 51.509900000000002,
                            Longitude = -0.11799999999999999,
                            Name = "London",
                            Population = 8982000
                        },
                        new
                        {
                            Id = 3,
                            Country = "Japan",
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917,
                            Name = "Tokyo",
                            Population = 13929286
                        });
                });

            modelBuilder.Entity("CityInfo.API.Models.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Park",
                            CityId = 1,
                            Description = "A large urban park in Manhattan.",
                            Latitude = 40.7851,
                            Longitude = -73.968299999999999,
                            Name = "Central Park"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Landmark",
                            CityId = 1,
                            Description = "Iconic skyscraper in Midtown Manhattan.",
                            Latitude = 40.748399999999997,
                            Longitude = -73.985699999999994,
                            Name = "Empire State Building"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Park",
                            CityId = 2,
                            Description = "One of the largest parks in London.",
                            Latitude = 51.507399999999997,
                            Longitude = -0.16569999999999999,
                            Name = "Hyde Park"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Museum",
                            CityId = 2,
                            Description = "World-famous museum of art and antiquities.",
                            Latitude = 51.519399999999997,
                            Longitude = -0.127,
                            Name = "British Museum"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Park",
                            CityId = 3,
                            Description = "Famous public park in central Tokyo.",
                            Latitude = 35.714599999999997,
                            Longitude = 139.7732,
                            Name = "Ueno Park"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Landmark",
                            CityId = 3,
                            Description = "Iconic communications and observation tower.",
                            Latitude = 35.6586,
                            Longitude = 139.74539999999999,
                            Name = "Tokyo Tower"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Models.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Models.City", "City")
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Models.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
